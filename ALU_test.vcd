$date
	Tue Apr 21 14:13:11 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU4_tb $end
$scope module ALU01 $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # cin $end
$var wire 3 $ op [2:0] $end
$var wire 1 % v $end
$var wire 4 & shift [3:0] $end
$var wire 4 ' outcompare [3:0] $end
$var wire 1 ( cout1 $end
$var wire 1 ) cout $end
$var wire 4 * addersub [3:0] $end
$var reg 8 + out [7:0] $end
$scope module c01 $end
$var wire 4 , a [3:0] $end
$var wire 4 - b [3:0] $end
$var reg 4 . out [3:0] $end
$upscope $end
$scope module rca01 $end
$var wire 1 % V $end
$var wire 4 / a [3:0] $end
$var wire 4 0 b [3:0] $end
$var wire 1 1 b0 $end
$var wire 1 2 b1 $end
$var wire 1 3 b2 $end
$var wire 1 4 b3 $end
$var wire 1 # cin $end
$var wire 1 5 op $end
$var wire 8 6 sum [7:0] $end
$var wire 1 ) cout $end
$var wire 1 7 c3 $end
$var wire 1 8 c2 $end
$var wire 1 9 c1 $end
$var wire 1 : c0 $end
$scope module FA01 $end
$var wire 1 ; a $end
$var wire 1 1 b $end
$var wire 1 : cin $end
$var wire 1 9 cout $end
$var wire 1 < sum $end
$var wire 1 = w $end
$var wire 1 > w1 $end
$var wire 1 ? w2 $end
$var wire 1 @ w3 $end
$upscope $end
$scope module FA02 $end
$var wire 1 A a $end
$var wire 1 2 b $end
$var wire 1 9 cin $end
$var wire 1 8 cout $end
$var wire 1 B sum $end
$var wire 1 C w $end
$var wire 1 D w1 $end
$var wire 1 E w2 $end
$var wire 1 F w3 $end
$upscope $end
$scope module FA03 $end
$var wire 1 G a $end
$var wire 1 3 b $end
$var wire 1 8 cin $end
$var wire 1 7 cout $end
$var wire 1 H sum $end
$var wire 1 I w $end
$var wire 1 J w1 $end
$var wire 1 K w2 $end
$var wire 1 L w3 $end
$upscope $end
$scope module FA04 $end
$var wire 1 M a $end
$var wire 1 4 b $end
$var wire 1 7 cin $end
$var wire 1 ) cout $end
$var wire 1 N sum $end
$var wire 1 O w $end
$var wire 1 P w1 $end
$var wire 1 Q w2 $end
$var wire 1 R w3 $end
$upscope $end
$upscope $end
$scope module sh01 $end
$var wire 4 S a [3:0] $end
$var wire 4 T out [3:0] $end
$var wire 1 ( cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 T
b0 S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
bz0000 6
05
04
03
02
01
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
0)
0(
b0 '
b0 &
0%
b0 $
0#
b0 "
b0 !
$end
#50
b11 +
b11 *
1<
bz0011 6
1B
1>
19
1@
11
0=
1?
1:
1;
1(
1#
b1 "
b1 -
b1 0
b1 !
b1 ,
b1 /
b1 S
#100
b101 +
09
b101 *
1H
1%
0@
1D
0F
1<
bz0101 6
0B
18
01
12
0=
0>
0?
0C
0E
0;
1A
0(
b1 &
b1 T
b10 "
b10 -
b10 0
b10 !
b10 ,
b10 /
b10 S
#150
b110 +
b110 *
1B
1E
1F
bz0110 6
0<
19
1>
11
0=
0:
1;
1(
0#
b11 "
b11 -
b11 0
b11 !
b11 ,
b11 /
b11 S
#200
b10 +
b10 *
1)
bz0010 6
0H
1R
08
17
0F
0L
1O
1@
1=
0>
0D
0E
1J
0K
02
13
14
1:
b10 '
b10 .
0;
0A
1G
0(
b10 &
b10 T
15
b10 "
b10 -
b10 0
b100 !
b100 ,
b100 /
b100 S
b1 $
#250
1H
1K
1L
0%
b1100 +
0B
18
1N
0)
b1100 *
0@
1C
1F
0O
0R
bz1100 6
0<
01
12
04
1=
0>
1?
b1 '
b1 .
1;
1(
1#
b1001 "
b1001 -
b1001 0
b101 !
b101 ,
b101 /
b101 S
#300
17
1K
0%
b0 +
18
0H
0N
1)
b0 *
1@
0F
1I
0J
0L
1O
1R
0<
19
bz0000 6
0B
11
02
03
14
1=
0?
1C
0D
1E
b0 '
b0 .
0;
1A
0(
b11 &
b11 T
0#
b110 "
b110 -
b110 0
b110 !
b110 ,
b110 /
b110 S
#350
b1110 *
1B
1H
bz1110 6
1N
0)
0C
1D
1F
0I
1J
1L
0O
0R
0@
0=
1>
12
13
04
0:
1;
1(
b11 +
05
b111 "
b111 -
b111 0
b111 !
b111 ,
b111 /
b111 S
b10 $
#400
1<
08
07
b1 *
0F
0L
1P
0R
09
0B
0H
bz0001 6
0N
1)
01
02
03
14
0=
0>
0C
0D
0E
0I
0J
0K
0O
0Q
b100 +
1:
0;
0A
0G
1M
0(
b100 &
b100 T
1#
b1000 "
b1000 -
b1000 0
b1000 !
b1000 ,
b1000 /
b1000 S
#450
b1111 *
1H
1B
bz1111 6
1N
0)
1I
1C
1O
0P
13
b1 '
b1 .
1A
0M
b1 &
b1 T
b110 +
15
b11 "
b11 -
b11 0
b10 !
b10 ,
b10 /
b10 S
b11 $
#500
0#
#550
b1011 *
bz1011 6
0H
0I
12
03
04
b10 '
b10 .
0A
1M
b100 &
b100 T
b101 +
05
1#
b10 "
b10 -
b10 0
b1000 !
b1000 ,
b1000 /
b1000 S
b100 $
#600
1E
1F
0<
19
1H
1%
b110 *
1>
1B
18
bz0110 6
0N
11
0=
0C
1D
0O
b1111 +
0:
b0 '
b0 .
1;
1A
0M
1(
b1 &
b1 T
0#
b11 "
b11 -
b11 0
b11 !
b11 ,
b11 /
b11 S
#650
1)
b100 *
1R
0%
bz0100 6
0B
17
1C
0D
0F
1L
1O
1@
1=
0>
1J
1K
02
13
14
1:
b10 '
b10 .
0;
1G
b11 &
b11 T
0(
b10 +
15
1#
b10 "
b10 -
b10 0
b110 !
b110 ,
b110 /
b110 S
b101 $
#700
0)
1N
0R
1%
07
b1100 *
0@
0L
0<
bz1100 6
1H
01
03
1=
0>
1?
0I
0J
0K
b1 +
b1 '
b1 .
1;
0G
b1 &
b1 T
1(
0#
b111 "
b111 -
b111 0
b11 !
b11 ,
b11 /
b11 S
#750
1)
0N
1R
17
0H
1L
1F
b0 *
0%
1@
1I
0<
19
bz0000 6
0B
18
11
12
13
1=
0?
1C
0E
b0 +
b0 '
b0 .
0;
0A
0(
b0 &
b0 T
b0 "
b0 -
b0 0
b0 !
b0 ,
b0 /
b0 S
#800
